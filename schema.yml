openapi: 3.0.3
info:
  title: Student API
  version: 1.0.0
  description: This is a student official API documentation.
paths:
  /api/subtasks/:
    get:
      operationId: subtasks_list
      tags:
      - subtasks
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubTask'
          description: ''
    post:
      operationId: subtasks_create
      tags:
      - subtasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubTask'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubTask'
          description: ''
  /api/subtasks/{id}/:
    get:
      operationId: subtasks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Подзадача.
        required: true
      tags:
      - subtasks
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubTask'
          description: ''
    put:
      operationId: subtasks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Подзадача.
        required: true
      tags:
      - subtasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubTask'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubTask'
          description: ''
    patch:
      operationId: subtasks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Подзадача.
        required: true
      tags:
      - subtasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubTask'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubTask'
          description: ''
    delete:
      operationId: subtasks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Подзадача.
        required: true
      tags:
      - subtasks
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/tasks/:
    get:
      operationId: tasks_list
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
    post:
      operationId: tasks_create
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /api/tasks/{id}/:
    get:
      operationId: tasks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Задача.
        required: true
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    put:
      operationId: tasks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Задача.
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    patch:
      operationId: tasks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Задача.
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTask'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    delete:
      operationId: tasks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Задача.
        required: true
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    PatchedSubTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        body:
          type: string
        completed:
          type: boolean
        task:
          type: integer
    PatchedTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        body:
          type: string
        author:
          type: integer
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        subtasks:
          type: array
          items:
            $ref: '#/components/schemas/SubTask'
          readOnly: true
    PriorityEnum:
      enum:
      - low
      - medium
      - high
      type: string
      description: |-
        * `low` - Low
        * `medium` - Medium
        * `high` - High
    SubTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        body:
          type: string
        completed:
          type: boolean
        task:
          type: integer
      required:
      - body
      - id
      - name
      - task
    Task:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        body:
          type: string
        author:
          type: integer
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        subtasks:
          type: array
          items:
            $ref: '#/components/schemas/SubTask'
          readOnly: true
      required:
      - author
      - body
      - id
      - name
      - priority
      - subtasks
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
